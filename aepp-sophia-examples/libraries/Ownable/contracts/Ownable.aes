contract Ownable =
	record state = {
		owner : address}

	public stateful function init() = {
		owner = Call.caller }

	public function owner() : address = state.owner

	public function only_owner() =
		require(state.owner == Call.caller, "The caller is different than the owner")

	public function is_owner() : bool =
		state.owner == Call.caller

	public stateful function renounce_ownership() =
		only_owner()
		put(state{ owner = #0 })

	public function transfer_ownership(new_owner: address) =
		only_owner()
		transfer_ownership'(new_owner)

	internal stateful function transfer_ownership'(new_owner: address) =
		require(new_owner != #0, "The address of the new owner must be different than #0 ")
		put(state{owner = new_owner})

 	private function require(expression : bool, error : string) =
  		if(!expression)
		   abort(error)